# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: dreamsls-test

provider:
  name: aws
  runtime: nodejs4.3
  iamRoleStatements:
    - Effect: Allow
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:GetItem"
        - "dynamodb:Scan"
        - "dynamodb:ListTables"   
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

functions:
  read:
    handler: handler.read
    events:
        - http:
            path: read
            method: GET
            cors: true
        - http:
            path: read/{id}
            method: GET
            cors: true
  create:
    handler: handler.create
    events:
        - http:
            path: create
            method: POST
            cors: true
  control:
    handler: handler.control
    events:
        - http:
            path: control
            method: GET
            cors: true
        - http:
            path: control/{id}
            method: GET
            cors: true
        - http:
            path: control/{id}
            method: POST
            cors: true
        - http:
            path: control/{id}
            method: PUT
            cors: true
#    you can add any of the following events
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
resources:
  Resources:
    DynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: p_uid
            AttributeType: S
          #- AttributeName: craftsman
          #  AttributeType: S
        KeySchema:
          - AttributeName: p_uid
            KeyType: HASH
          #- AttributeName: craftsman
          #  KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: dreamplus_dynamodb
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
